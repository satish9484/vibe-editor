{
  "info": {
    "name": "Vibe Editor - Code Completion API",
    "description": "API collection for testing code completion with Vercel (HuggingFace) and Local (Ollama)",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Local Development (Ollama)",
      "item": [
        {
          "name": "Post Code Completion",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"fileContent\": \"import React from 'react'\\n\\nconst MyComponent = () => {\\n  return (\\n    <div>\\n      {/* TODO: Add content */}\",\n  \"cursorLine\": 5,\n  \"cursorColumn\": 15,\n  \"suggestionType\": \"function\",\n  \"fileName\": \"MyComponent.tsx\"\n}"
            },
            "url": {
              "raw": "{{base_url_local}}/api/code-completion",
              "host": ["{{base_url_local}}"],
              "path": ["api", "code-completion"]
            }
          }
        },
        {
          "name": "Post Code Completion - TypeScript",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"fileContent\": \"interface User {\\n  name: string;\\n  age: number;\\n}\\n\\nconst getUser = (id: string): User => {\\n  // TODO: Implement function\",\n  \"cursorLine\": 6,\n  \"cursorColumn\": 23,\n  \"suggestionType\": \"function\",\n  \"fileName\": \"user.ts\"\n}"
            },
            "url": {
              "raw": "{{base_url_local}}/api/code-completion",
              "host": ["{{base_url_local}}"],
              "path": ["api", "code-completion"]
            }
          }
        },
        {
          "name": "Post Code Completion - Python",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"fileContent\": \"def calculate_total(items):\\n  \\\"\\\"\\\"Calculate total price of items\\\"\\\"\\\"\\n  total = 0\\n  for item in items:\\n    // TODO: Add price calculation\",\n  \"cursorLine\": 4,\n  \"cursorColumn\": 20,\n  \"suggestionType\": \"statement\",\n  \"fileName\": \"calculator.py\"\n}"
            },
            "url": {
              "raw": "{{base_url_local}}/api/code-completion",
              "host": ["{{base_url_local}}"],
              "path": ["api", "code-completion"]
            }
          }
        },
        {
          "name": "Post Code Completion - Streaming Mode",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"fileContent\": \"import React from 'react'\\n\\nconst MyComponent = () => {\\n  return (\\n    <div>\\n      {/* TODO: Add content */}\",\n  \"cursorLine\": 5,\n  \"cursorColumn\": 15,\n  \"suggestionType\": \"function\",\n  \"fileName\": \"MyComponent.tsx\",\n  \"stream\": true\n}"
            },
            "url": {
              "raw": "{{base_url_local}}/api/code-completion",
              "host": ["{{base_url_local}}"],
              "path": ["api", "code-completion"]
            },
            "description": "Streaming mode shows real-time output as it's generated. Watch the response in Postman to see the text appear character by character."
          }
        }
      ]
    },
    {
      "name": "Local Testing - HuggingFace",
      "item": [
        {
          "name": "Force HuggingFace Provider",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"fileContent\": \"import React from 'react'\\n\\nconst MyComponent = () => {\\n  return (\\n    <div>\\n      {/* TODO: Add content */}\",\n  \"cursorLine\": 5,\n  \"cursorColumn\": 15,\n  \"suggestionType\": \"function\",\n  \"fileName\": \"MyComponent.tsx\",\n  \"provider\": \"huggingface\"\n}"
            },
            "url": {
              "raw": "{{base_url_local}}/api/code-completion",
              "host": ["{{base_url_local}}"],
              "path": ["api", "code-completion"]
            },
            "description": "Tests HuggingFace API locally. Requires HUGGINGFACE_API_KEY in .env.local"
          }
        },
        {
          "name": "HuggingFace - TypeScript",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"fileContent\": \"interface User {\\n  name: string;\\n  age: number;\\n}\\n\\nconst getUser = (id: string): User => {\\n  // TODO: Implement\",\n  \"cursorLine\": 6,\n  \"cursorColumn\": 23,\n  \"suggestionType\": \"function\",\n  \"fileName\": \"user.ts\",\n  \"provider\": \"huggingface\"\n}"
            },
            "url": {
              "raw": "{{base_url_local}}/api/code-completion",
              "host": ["{{base_url_local}}"],
              "path": ["api", "code-completion"]
            }
          }
        },
        {
          "name": "HuggingFace - Python",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"fileContent\": \"def calculate_total(items):\\n  \\\"\\\"\\\"Calculate total\\\"\\\"\\\"\\n  total = 0\\n  for item in items:\\n    \",\n  \"cursorLine\": 4,\n  \"cursorColumn\": 18,\n  \"suggestionType\": \"statement\",\n  \"fileName\": \"calculator.py\",\n  \"provider\": \"huggingface\"\n}"
            },
            "url": {
              "raw": "{{base_url_local}}/api/code-completion",
              "host": ["{{base_url_local}}"],
              "path": ["api", "code-completion"]
            }
          }
        }
      ]
    },
    {
      "name": "Production (Vercel + HuggingFace)",
      "item": [
        {
          "name": "Post Code Completion - React",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"fileContent\": \"import { useState } from 'react'\\nimport reactLogo from './assets/react.svg'\\nimport viteLogo from '/vite.svg'\\nimport './App.css'\\n\\nfunction App() {\\n  const [count, setCount] = useState(0)\\n\\n  return (\\n    <>\\n      <div>\\n        <a href=\\\"https://vite.dev\\\" target=\\\"_blank\\\">\\n          <img src={viteLogo} className=\\\"logo\\\" alt=\\\"Vite logo\\\" />\\n        </a>\\n        <a href=\\\"https://react.dev\\\" target=\\\"_blank\\\">\\n          <img src={reactLogo} className=\\\"logo react\\\" alt=\\\"React logo\\\" />\\n        </a>\\n      </div>\\n      <h1>Vite + React</h1>\\n      <div className=\\\"card\\\">\\n        <button onClick={() => setCount((count) => count + 1)}>\\n          count is {count}\\n        </button>\\n        <p>\\n\\n        \\n          Edit <code>src/App.tsx</code> and save to test HMR\\n        </p>\\n      </div>\\n      <p className=\\\"read-the-docs\\\">\\n        Click on the Vite and React logos to learn more\\n      </p>\\n    </>\\n  )\\n}\\n\\nexport default App\\n\",\n  \"cursorLine\": 16,\n  \"cursorColumn\": 12,\n  \"suggestionType\": \"completion\"\n}"
            },
            "url": {
              "raw": "{{base_url_vercel}}/api/code-completion",
              "host": ["{{base_url_vercel}}"],
              "path": ["api", "code-completion"]
            },
            "description": "Test React code completion on Vercel with HuggingFace StarCoder2 model"
          }
        },
        {
          "name": "Post Code Completion - TypeScript",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"fileContent\": \"interface User {\\n  name: string;\\n  age: number;\\n}\\n\\nconst getUser = (id: string): User => {\",\n  \"cursorLine\": 6,\n  \"cursorColumn\": 23,\n  \"suggestionType\": \"function\",\n  \"fileName\": \"user.ts\"\n}"
            },
            "url": {
              "raw": "{{base_url_vercel}}/api/code-completion",
              "host": ["{{base_url_vercel}}"],
              "path": ["api", "code-completion"]
            }
          }
        }
      ]
    }
  ],
  "variable": [
    {
      "key": "base_url_local",
      "value": "http://localhost:3000",
      "type": "string"
    },
    {
      "key": "base_url_vercel",
      "value": "https://your-app.vercel.app",
      "type": "string"
    }
  ]
}
